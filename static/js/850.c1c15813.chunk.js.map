{"version":3,"file":"static/js/850.c1c15813.chunk.js","mappings":"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","sources":["components/CastItem.jsx","components/Cast.jsx","pages/MovieInfo.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IMG } from 'pages/MovieInfo';\n\nexport const CastItem = ({ actor }) => {\n  return (\n    <li>\n      <IMG\n        src={\n          actor.profile_path\n            ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n            : 'https://www.drupal.org/files/project-images/broken-image.jpg'\n        }\n        alt={actor.name}\n        width={180}\n      />\n      <h4>{actor.name}</h4>\n      <h5>{actor.character}</h5>\n    </li>\n  );\n};\n\nCastItem.propTypes = {\n  actor: PropTypes.shape({\n    profile_path: PropTypes.string,\n    name: PropTypes.string,\n    character: PropTypes.string,\n  }),\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'services/api';\nimport { CastItem } from './CastItem';\nimport styled from 'styled-components';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams('movieId');\n\n  useEffect(() => {\n    const fetchCastMovies = async () => {\n      const { cast } = await fetchCast(movieId);\n      setCast(cast);\n    };\n    fetchCastMovies();\n  }, [movieId]);\n  return (\n    <CastStyled>\n      {cast.map((actor, idx) => (\n        <CastItem actor={actor} key={idx} />\n      ))}\n    </CastStyled>\n  );\n};\n\nexport default Cast;\n\nconst CastStyled = styled.ul`\n  padding: 40px;\n  display: grid;\n  grid-template-columns: repeat(4, 180px);\n  justify-content: space-between;\n  grid-row-gap: 5px;\n  grid-column-gap: 5px;\n  list-style: none;\n`;\n","import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { fetchInfoMovie } from 'services/api';\nimport styled from 'styled-components';\n\nconst MovieInfo = () => {\n  const [film, setFilm] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  console.log(location);\n  const newLocation = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const fetchAboutMovie = async () => {\n      const data = await fetchInfoMovie(movieId);\n      setFilm(data);\n    };\n    fetchAboutMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      <GoBackStyled to={newLocation.current}>Go back</GoBackStyled>\n      <div>\n        <img\n          src={\n            film.poster_path\n              ? `https://image.tmdb.org/t/p/w500/${film.poster_path}`\n              : 'https://www.drupal.org/files/project-images/broken-image.jpg'\n          }\n          alt={film.title}\n        />\n        <h1>{film.title}</h1>\n        <h3>User score: {film.vote_average}</h3>\n        <h3>Overview</h3>\n        <p>{film.overview}</p>\n        <h3>Genres</h3>\n        {film.genres && (\n          <p>\n            {film.genres.map(el => (\n              <span key={el.id}>{el.name} </span>\n            ))}\n          </p>\n        )}\n      </div>\n      <InfoStyled>\n        <InfoListStyled>\n          <li>\n            <NavLinkStyled to=\"cast\">Cast</NavLinkStyled>\n          </li>\n          <li>\n            <NavLinkStyled to=\"reviews\">Reviews</NavLinkStyled>\n          </li>\n        </InfoListStyled>\n      </InfoStyled>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n\nconst InfoStyled = styled.div`\n  display: flex;\n  gap: 20px;\n  padding: 20px;\n  border-bottom: solid 3px black;\n`;\nconst InfoListStyled = styled.ul`\n  font-size: large;\n  padding: 24px 30px;\n  border-bottom: solid 2px black;\n  display: flex;\n  gap: 30px;\n  margin: 0;\n  text-decoration: none;\n  list-style: none;\n`;\nexport const IMG = styled.img`\n  aspect-ratio: 3/4;\n\n  object-fit: cover;\n`;\n\nconst NavLinkStyled = styled(NavLink)`\n  font-weight: 700;\n`;\nconst GoBackStyled = styled(Link)`\n  display: block;\n  width: fit-content;\n  padding: 10px 20px;\n  font-size: x-large;\n  font-weight: 600;\n  text-decoration: none;\n`;\n"],"names":["CastItem","_ref","actor","_jsxs","children","_jsx","IMG","src","profile_path","concat","alt","name","width","character","_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","useEffect","fetchCastMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchCast","_context","prev","next","fetchCast","sent","stop","apply","arguments","CastStyled","map","idx","styled","_templateObject","_taggedTemplateLiteral","_location$state$from","_location$state","film","setFilm","location","useLocation","console","log","newLocation","useRef","state","from","fetchAboutMovie","data","fetchInfoMovie","GoBackStyled","to","current","poster_path","title","vote_average","overview","genres","el","id","InfoStyled","InfoListStyled","NavLinkStyled","Suspense","Outlet","_templateObject2","_templateObject3","NavLink","_templateObject4","Link","_templateObject5"],"sourceRoot":""}