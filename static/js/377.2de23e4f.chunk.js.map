{"version":3,"file":"static/js/377.2de23e4f.chunk.js","mappings":"+RAmEA,UAxDkB,WAAO,IAADA,EACtBC,GAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACZI,GAAYC,EAAAA,EAAAA,MAAZD,QACJE,GAAWC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,QAAqB,QAAfZ,EAACS,EAASI,aAAK,IAAAb,OAAA,EAAdA,EAAgBc,MAU3C,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,GACHC,EAAAA,EAAAA,IAAelB,GAAS,KAAD,EAApCc,EAAIC,EAAAI,KACVpB,EAAQe,GAAM,wBAAAC,EAAAK,OAAA,GAAAP,EAAA,KACf,kBAHoB,OAAAH,EAAAW,MAAA,KAAAC,UAAA,KAIrBb,GACF,GAAG,CAACT,KAGFuB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAY,CAACC,GAAIvB,EAAYwB,QAAQJ,SAAC,aACvCD,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OACEI,IACE/B,EAAKgC,YAAW,mCAAAC,OACuBjC,EAAKgC,aACxC,+DAENE,IAAKlC,EAAKmC,SAEZR,EAAAA,EAAAA,KAAA,MAAAD,SAAK1B,EAAKmC,SACVV,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,eAAa1B,EAAKoC,iBACtBT,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAI1B,EAAKqC,YACTV,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACH1B,EAAKsC,SACJX,EAAAA,EAAAA,KAAA,KAAAD,SACG1B,EAAKsC,OAAOC,KAAI,SAAAC,GAAE,OACjBf,EAAAA,EAAAA,MAAA,QAAAC,SAAA,CAAmBc,EAAGC,KAAK,MAAhBD,EAAGE,GAAqB,UAK3Cf,EAAAA,EAAAA,KAACgB,EAAU,CAAAjB,UACTD,EAAAA,EAAAA,MAACmB,EAAc,CAAAlB,SAAA,EACbC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACkB,EAAa,CAAChB,GAAG,OAAMH,SAAC,YAE3BC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACkB,EAAa,CAAChB,GAAG,UAASH,SAAC,oBAIlCC,EAAAA,EAAAA,KAACmB,EAAAA,SAAQ,CAAApB,UACPC,EAAAA,EAAAA,KAACoB,EAAAA,GAAM,QAIf,EAIA,IAAMJ,EAAaK,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+FAMvBN,EAAiBI,EAAAA,GAAAA,GAASG,IAAAA,GAAAD,EAAAA,EAAAA,GAAA,sLAUnBE,EAAMJ,EAAAA,GAAAA,IAAUK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,wDAMvBL,GAAgBG,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAeO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,+BAG/BtB,GAAeoB,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAYS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,gJ","sources":["pages/MovieInfo.jsx"],"sourcesContent":["import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { fetchInfoMovie } from 'services/api';\nimport styled from 'styled-components';\n\nconst MovieInfo = () => {\n  const [film, setFilm] = useState({});\n  const { movieId } = useParams();\n  let location = useLocation();\n  const newLocation = useRef(location.state?.from);\n\n  useEffect(() => {\n    const fetchAboutMovie = async () => {\n      const data = await fetchInfoMovie(movieId);\n      setFilm(data);\n    };\n    fetchAboutMovie();\n  }, [movieId]);\n\n  return (\n    <div>\n      <GoBackStyled to={newLocation.current}>Go back</GoBackStyled>\n      <div>\n        <img\n          src={\n            film.poster_path\n              ? `https://image.tmdb.org/t/p/w500/${film.poster_path}`\n              : 'https://www.drupal.org/files/project-images/broken-image.jpg'\n          }\n          alt={film.title}\n        />\n        <h1>{film.title}</h1>\n        <h3>User score: {film.vote_average}</h3>\n        <h3>Overview</h3>\n        <p>{film.overview}</p>\n        <h3>Genres</h3>\n        {film.genres && (\n          <p>\n            {film.genres.map(el => (\n              <span key={el.id}>{el.name} </span>\n            ))}\n          </p>\n        )}\n      </div>\n      <InfoStyled>\n        <InfoListStyled>\n          <li>\n            <NavLinkStyled to=\"cast\">Cast</NavLinkStyled>\n          </li>\n          <li>\n            <NavLinkStyled to=\"reviews\">Reviews</NavLinkStyled>\n          </li>\n        </InfoListStyled>\n      </InfoStyled>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n\nconst InfoStyled = styled.div`\n  display: flex;\n  gap: 20px;\n  padding: 20px;\n  border-bottom: solid 3px black;\n`;\nconst InfoListStyled = styled.ul`\n  font-size: large;\n  padding: 24px 30px;\n  border-bottom: solid 2px black;\n  display: flex;\n  gap: 30px;\n  margin: 0;\n  text-decoration: none;\n  list-style: none;\n`;\nexport const IMG = styled.img`\n  aspect-ratio: 3/4;\n\n  object-fit: cover;\n`;\n\nconst NavLinkStyled = styled(NavLink)`\n  font-weight: 700;\n`;\nconst GoBackStyled = styled(Link)`\n  display: block;\n  width: fit-content;\n  padding: 10px 20px;\n  font-size: x-large;\n  font-weight: 600;\n  text-decoration: none;\n`;\n"],"names":["_location$state","_useState","useState","_useState2","_slicedToArray","film","setFilm","movieId","useParams","location","useLocation","newLocation","useRef","state","from","useEffect","fetchAboutMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","fetchInfoMovie","sent","stop","apply","arguments","_jsxs","children","_jsx","GoBackStyled","to","current","src","poster_path","concat","alt","title","vote_average","overview","genres","map","el","name","id","InfoStyled","InfoListStyled","NavLinkStyled","Suspense","Outlet","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","IMG","_templateObject3","NavLink","_templateObject4","Link","_templateObject5"],"sourceRoot":""}